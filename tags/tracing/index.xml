<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>tracing on Qiao</title>
    <link>https://tanjoe.github.io/tags/tracing/</link>
    <description>Recent content in tracing on Qiao</description>
    <image>
      <title>Qiao</title>
      <url>https://tanjoe.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://tanjoe.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 25 Feb 2022 18:04:35 +0000</lastBuildDate><atom:link href="https://tanjoe.github.io/tags/tracing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用strace查找文件热点</title>
      <link>https://tanjoe.github.io/posts/%E5%88%A9%E7%94%A8strace%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6%E7%83%AD%E7%82%B9/</link>
      <pubDate>Fri, 25 Feb 2022 18:04:35 +0000</pubDate>
      
      <guid>https://tanjoe.github.io/posts/%E5%88%A9%E7%94%A8strace%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6%E7%83%AD%E7%82%B9/</guid>
      <description>在做性能调优时，遇到这么一个问题：已知国产机（飞腾+麒麟OS）上机械硬盘的性能非常差，文件读写会有不少开销，那么怎么跟踪程序的读写情况，尽量优化掉不必要的读写呢？这需要查找文件热点。对于这项工作，BPF Compiler Collection里的filetop是个很好的选择，不过BCC这组工具在麒麟OS源里没有提供，遂考虑用strace实现。
跟踪系统调用 严格来说，strace并不能直接跟踪文件的读写情况，而是跟踪所有接受一个文件名为参数的系统调用。不过无论是频繁读写还是频繁判断文件状态，对于调优而言都是可待优化的，因此这里没有严格区分两者。
跟踪文件相关的系统调用：
$ strace -t -e trace=file -o strace.log COMMAND # --trace=file # Trace all system calls which take a file name as an argument. You can think of this as an abbreviation for -e trace=open,stat,chmod,unlink,... which is useful to seeing what files the process is referencing. --trace=还可以使用process、network、signal、desc、memory等等，参见https://man7.org/linux/man-pages/man1/strace.1.html
示例
$ strace -t -e trace=file -o strace.log fc-list $ cat strace.log 18:07:24 execve(&amp;#34;/home/tanqiao/program/hotspot/hotspot&amp;#34;, [&amp;#34;hotspot&amp;#34;], 0x7ffc0b28a138 /* 80 vars */) = 0 18:07:24 access(&amp;#34;/etc/ld.</description>
    </item>
    
  </channel>
</rss>
